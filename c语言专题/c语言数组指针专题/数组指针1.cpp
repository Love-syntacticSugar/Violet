#include<stdio.h>
int main()
{
	int a[2] = {0,1};
	int (*p)[2];
	int i;
	p = &a;           /*  	 &a 是整个数组的首地址，a是数组首元素的首地址，其值相同但意义不同。在C 语言里，赋值符号“=”号两边的数据类型必须是相同的，如果不同需要显示或隐式的类型转换.
							左边的类型是指向整个数组的指针，右边的数据类型是指向单个字符的指针。   a是首元素地址，而p需要 数组地址  故不能 p = a     */
	printf("%d ",**p); 

	return 0;
	
}
/*IM！！困扰我很久的东西！ 问：p+1表示什么？来看底下两个式子 
	printf("%p ",p);    结果： 000000000062FE10
	printf("%p ",p+1);   结果：000000000062FE18
	发现了吗？相差8个字节-->也就是一整个数组的长度！
	p代表整个数组，所以它p+1自然而然跨越了一整个数组指向下一个数组，但是我们这里并没有定义下一个数组（只定义了一个数组） 
*/



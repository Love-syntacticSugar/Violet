#include<stdio.h>
int main()
{
int nums[2][2] = {{1, 2},{2, 3}};

//此时 nums[0]、和 nums[1]各为一个数组     而nums[0]就是它的数组名（小抽象哦）        ！！！这句话很重要！！！就像你定义了两个数组，然后这两个数组就是二维数组的两个"元素" 
int *p[2] = {nums[0], nums[1]};   //某种意义上来说，数组p是一个二维数组   懂？！ 

//p = &nums[0]  ， p[0] = *p = nums[0] ， nums[0] = &nums[0][0]  ，**p = nums[0][0]          
printf("nums[0][0] = %d", **p);

//*(p +1) = nums[1]，则**(p + 1) = nums[1][0]
printf("nums[1][0] = %d", **(p + 1));          //OW理解：先从一维数组理解，p+1就是第二个'元素'的地址，那么二维数组里，第二个'元素'就是nums[1]   底下博主理解 

//先*p = nums[0]，再*p + 1 = &nums[0][1]
printf("nums[0][1] = %d", *(*p + 1));          //OW理解：即博主理解     底下博主理解 
return 0;
}

                              /*  博主理解： 这里可能不能理解为什么*p + 1 = &nums[0][1]，而不是 nums[1]。*p 获得的是一个一维数组，而 int 数组 + 1 的跨度只有 4 个字节，也就是一个单元。
                                 前面 p 是一维数组的指针，其跨度为一个数组。所以*p + 1 = &nums[0][1]，而 p + 1 = nums[1]。    */
/*
以上若不懂请重看  数组指针专题--> 数组指针3
*/

